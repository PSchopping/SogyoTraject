stages: 
    - build
    - test
    - visualize

buildAPI:
    stage: build
    image: gradle:6.0.1-jdk13
    script:
        - echo "Building"
        - gradle :api:build
    artifacts:
        paths:
        - api/build/libs/api.jar

testAPI:
    stage: test
    image: gradle:6.0.1-jdk13
    script:
        - echo "Testing"
        - gradle :api:test
    dependencies:
        - buildAPI
    artifacts:
      paths:
        - api/build/reports/jacoco/
      reports:
        junit: api/build/test-results/test/**/TEST-*.xml

buildDomain:
    stage: build
    image: gradle:6.0.1-jdk13
    script:
        - echo "Building"
        - gradle :domain:build
    artifacts:
        paths:
        - domain/build/libs/domain.jar

testDomain:
    stage: test
    image: gradle:6.0.1-jdk13
    script:
        - echo "Testing"
        - gradle :domain:test
    dependencies:
        - buildDomain
    artifacts:
      paths:
        - domain/build/reports/jacoco/
      reports:
        junit: domain/build/test-results/test/**/TEST-*.xml

test-jdk11:
  stage: test
  image: gradle:6.6.1-jdk11
  script:
    - 'gradle :api:test jacocoTestReport' # jacoco must be configured to create an xml report
  needs: ["buildAPI"]
  dependencies:
    - buildAPI
  artifacts:
    paths:
      - build/jacoco/jacoco.xml


coverage-jdk11:
  # Must be in a stage later than test-jdk11's stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or chose an existing stage like `deploy`.
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py build/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > build/cobertura.xml
  needs: ["test-jdk11"]
  dependencies:
    - test-jdk11
  artifacts:
    reports:
      cobertura: build/cobertura.xml

